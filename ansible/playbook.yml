---
- name: Setup Docker, Docker Compose and Monitoring 
  hosts: all
  become: yes
  vars:
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'

  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: yes

    - name: Install required system packages
      apt:
        name: ['apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common']
        update_cache: yes

    - name: Download Docker GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /usr/share/keyrings/docker-archive-keyring.gpg
        mode: '0644'

    - name: Update package cache
      apt:
        update_cache: yes

    - name: Create app directory
      file:
        path: /opt/monitoring
        state: directory

    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Ensure Docker is started and enabled
      systemd:
        name: docker
        state: started
        enabled: yes

         # 2. Копирование сайта и Dockerfile
    - name: Create web directory
      file:
        path: /opt/web
        state: directory

    - name: Copy website files
      copy:
        src: ../../index.html
        dest: /opt/web/index.html

    - name: Copy Dockerfile
      copy:
        src: files/Dockerfile
        dest: /opt/web/Dockerfile

    # 3. Сборка образа
    - name: Build website Docker image
      shell: docker build -t my-website .
      args:
        chdir: /opt/web

        # 4. Запуск контейнера
    - name: Stop existing website container (if any)
      shell: docker stop website || true
      ignore_errors: yes

    - name: Remove existing website container (if any)
      shell: docker rm website || true
      ignore_errors: yes

    - name: Stop and remove existing containers
      shell: docker-compose down
      args:
        chdir: /opt/monitoring
      ignore_errors: yes  # чтобы не падал, если контейнеров нет

    - name: Run website container
      shell: >
        docker run -d
        --name website
        --restart unless-stopped
        -p 80:80
        my-website


 
    - name: Install Docker Compose
      get_url:
        url: https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: '0755'


    - name: Install ufw (firewall)
      apt:
        name: ufw
        state: present

    - name: Create prometheus config directory
      file:
        path: /opt/monitoring/prometheus
        state: directory

    - name: Copy Prometheus config
      copy:
        src: files/prometheus.yml
        dest: /opt/monitoring/prometheus/prometheus.yml
        mode: '0644'

    - name: Set correct permissions for prometheus.yml
      file:
        path: /opt/monitoring/prometheus/prometheus.yml
        mode: '0644'
        owner: root
        group: root

    - name: Copy docker-compose.yml
      template:
        src: files/docker-compose.yml
        dest: /opt/monitoring/docker-compose.yml

    - name: Stop and remove existing containers
      shell: docker-compose down
      args:
        chdir: /opt/monitoring
      ignore_errors: yes  # чтобы не падал, если контейнеров нет

    - name: Start monitoring stack
      shell: docker-compose up -d
      args:
        chdir: /opt/monitoring

    - name: Allow SSH, HTTP, Grafana
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - 22   
        - 80   
        - 3000 
        - 9090
        - 9115